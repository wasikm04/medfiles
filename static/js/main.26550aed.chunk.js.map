{"version":3,"sources":["components/providers/CardProvider.jsx","components/NavBar.jsx","components/card/CardDetails.jsx","components/card/CardUpdate.jsx","components/Home.jsx","components/helpers/Login.jsx","components/helpers/ProtectedRoute.jsx","components/helpers/Register.jsx","App.jsx","index.jsx"],"names":["CardContext","React","createContext","CardConsumer","Consumer","CardProvider","state","card","isAuthenticated","isDoctor","doctorCard","user","updateCard","updatedCard","setState","prevState","Provider","value","this","props","children","Component","useStyles","makeStyles","theme","root","display","appBar","width","marginLeft","drawer","flexShrink","drawerPaper","background","toolbar","mixins","content","flexGrow","backgroundColor","palette","default","padding","spacing","colour","color","back","PermanentDrawerLeft","classes","useContext","className","CssBaseline","Drawer","variant","paper","anchor","to","Typography","align","justify","Divider","List","ListItem","button","ListItemIcon","ListItemText","secondary","CardDetails","CardUpdate","mail","firstname","lastname","handleOnChange","target","name","handleOnSubmit","event","preventDefault","onSubmit","htmlFor","type","onChange","ConnectedCardUpdate","id","Home","username","axios","require","get","withCredentials","then","response","console","log","catch","error","data","_user_id","withCookies","Login","handleChange","handleSubmit","isStatus","formData","FormData","append","password","post","headers","bool","includes","localStorage","setItem","status","bind","length","cookies","getItem","pathname","from","location","Container","component","maxWidth","TextField","margin","required","fullWidth","label","autoComplete","autoFocus","CircularProgress","Button","disabled","validateForm","ConnectedLogin","ProtectedRoute","rest","render","Register","email","repassword","marginTop","App","Grid","container","direction","alignItems","style","exact","path","item","xs","Card","paragraph","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.26550aed.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport const CardContext = React.createContext();\r\n\r\nexport const CardConsumer = CardContext.Consumer\r\n\r\nclass CardProvider extends Component {\r\n  state = {\r\n    card: {\r\n      \"_id\": \"\",\r\n      \"_user_mail\": \"\",\r\n      \"_user_id\": \"\",\r\n      \"first_name\": \"\",\r\n      \"last_name\": \"\",\r\n      \"dateBirth\": \"\",\r\n      \"sex\": \"m\",\r\n      \"address\": \"\",\r\n      \"phoneNumber\": \"\",\r\n      \"insuranceType\": \"\",\r\n      \"prescriptions\": [],\r\n      \"medicalTests\": [],\r\n      \"referrals\": [],\r\n      \"treatments\": [],\r\n      \"pesel\": \"\"\r\n    },\r\n    isAuthenticated: false,\r\n    isDoctor: false, \r\n    doctorCard:{},\r\n    user: \"\",\r\n    updateCard: updatedCard => this.updateCard(updatedCard)\r\n  }\r\n\r\nupdateCard = updatedCard => {\r\n  this.setState(prevState => ({\r\n    ...prevState,\r\n    ...updatedCard\r\n  }))\r\n}\r\n\r\nrender() {\r\n  return (\r\n    <CardContext.Provider value={this.state}>\r\n      {this.props.children}\r\n    </CardContext.Provider>\r\n  )\r\n}\r\n}\r\nexport default CardProvider","import React, { useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Link } from 'react-router-dom'\r\nimport NoteAddRoundedIcon from '@material-ui/icons/NoteAddRounded';\r\nimport ExitToAppRoundedIcon from '@material-ui/icons/ExitToAppRounded';\r\nimport EventRoundedIcon from '@material-ui/icons/EventRounded';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport DescriptionRoundedIcon from '@material-ui/icons/DescriptionRounded';\r\nimport AssignmentIndRoundedIcon from '@material-ui/icons/AssignmentIndRounded';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport { CardContext } from './providers/CardProvider';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        background: 'rgb(232,232,232)',\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(3),\r\n    },\r\n    colour: {\r\n        background: 'indigo',\r\n        color: \"white\"\r\n    },\r\n    back: {\r\n        background: 'rgb(128,128,128)'\r\n    }\r\n}));\r\n\r\n\r\nexport default function PermanentDrawerLeft() {\r\n    const classes = useStyles();\r\n    const { isAuthenticated, isDoctor } = useContext(CardContext);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n                anchor=\"left\">\r\n                <Link className={classes.colour}  to=\"/\" color=\"textPrimary\">\r\n                    <div className={classes.toolbar} >\r\n                        <Typography className={classes.toolbar}  variant=\"h4\" align=\"center\" justify=\"center\">\r\n                           MedFiles\r\n                        </Typography>\r\n                    </div>\r\n                </Link>\r\n                <Divider />\r\n                {isAuthenticated ?\r\n                    <List>\r\n                        <Link to=\"/home\" color=\"textPrimary\">\r\n                            <ListItem button >\r\n                                <ListItemIcon><DashboardIcon /></ListItemIcon>\r\n                                <ListItemText secondary={\"Strona Główna\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        {isDoctor ?\r\n                            <Link to=\"/card\" color=\"textPrimary\">\r\n                                <ListItem button >\r\n                                    <ListItemIcon><DescriptionRoundedIcon /></ListItemIcon>\r\n                                    <ListItemText secondary={\"Karta Pacjenta\"} />\r\n                                </ListItem>\r\n                            </Link> :\r\n                            <Link to=\"/doctor-card\" color=\"textPrimary\">\r\n                                <ListItem button >\r\n                                    <ListItemIcon><AssignmentIndRoundedIcon /></ListItemIcon>\r\n                                    <ListItemText secondary={\"Karta Lekarza\"} />\r\n                                </ListItem>\r\n                            </Link>\r\n                        }\r\n                        <Link to=\"/appointments\" color=\"textPrimary\">\r\n                            <ListItem button >\r\n                                <ListItemIcon><EventRoundedIcon /></ListItemIcon>\r\n                                <ListItemText secondary={\"Wizyty\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n\r\n                        <Divider />\r\n                        <Link to=\"/logout\" color=\"textPrimary\">\r\n                            <ListItem button >\r\n                                <ListItemIcon><ExitToAppRoundedIcon /></ListItemIcon>\r\n                                <ListItemText secondary={\"Wyloguj\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                    </List>\r\n                    :\r\n                    <List>\r\n                        <Link to=\"/login\" color=\"textPrimary\">\r\n                            <ListItem button >\r\n                                <ListItemIcon><LockOpenIcon /></ListItemIcon>\r\n                                <ListItemText secondary={\"Logowanie\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/register\" color=\"textPrimary\">\r\n                            <ListItem button >\r\n                                <ListItemIcon><NoteAddRoundedIcon /></ListItemIcon>\r\n                                <ListItemText secondary={\"Rejestracja\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                    </List>}\r\n                <Divider />\r\n            </Drawer>\r\n        </div >\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { CardConsumer } from '../providers/CardProvider';\r\n\r\nconst CardDetails = () => (\r\n  <CardConsumer>\r\n    {({ card}) => (\r\n          <div>\r\n            <div>\r\n              <p>Karta: {card}</p>\r\n            </div>\r\n            <Link to=\"/profile-update\">Aktualizacja karty</Link>\r\n          </div>\r\n    )}\r\n  </CardConsumer>\r\n) //cos tu nie tak bo strzela do bazy\r\nexport default CardDetails","import React, { Component } from 'react'\r\nimport { CardConsumer } from '../providers/CardProvider'\r\n\r\nclass CardUpdate extends Component {\r\n  state = {\r\n    mail: this.props.mail,\r\n    firstname: this.props.firstname,\r\n    lastname: this.props.lastname\r\n  }\r\n\r\n  handleOnChange = ({ target: { value, name } }) => {\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  handleOnSubmit = event => {\r\n    event.preventDefault()\r\n    //const data = new FormData(event.target);\r\n    //const values = data.values().next();\r\n    const updatedCard = { ...this.state }\r\n    this.props.updateCard(updatedCard)\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { firstname, lastname, mail } = this.state\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleOnSubmit}>\r\n          <label htmlFor=\"firstname\">Imię</label>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              name=\"firstname\"\r\n              value={firstname}\r\n              onChange={this.handleOnChange}\r\n            />\r\n          </div>\r\n          <label htmlFor=\"lastname\">Nazwisko</label>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={lastname}\r\n              name=\"lastname\"\r\n              onChange={this.handleOnChange}\r\n            />\r\n          </div>\r\n          <label htmlFor=\"mail\">Mail</label>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={mail}\r\n              name=\"mail\"\r\n              onChange={this.handleOnChange}\r\n            />\r\n          </div>\r\n          <input type=\"submit\" value=\"Zapisz\" />\r\n          <button>Send data!</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst ConnectedCardUpdate = props => (\r\n  <CardConsumer>\r\n    {({ firstname, lastname, mail, id, updateCard }) => (\r\n      <CardUpdate\r\n        {...props}\r\n        firstname={firstname}\r\n        lastname={lastname}\r\n        mail={mail}\r\n        id={id}\r\n        updateCard={updateCard}\r\n      />\r\n    )}\r\n  </CardConsumer>\r\n)\r\n\r\nexport default ConnectedCardUpdate","import React, { Component } from 'react';\r\nimport { withCookies } from 'react-cookie';\r\nimport { CardConsumer } from './providers/CardProvider'\r\nclass Home extends Component {\r\n\r\n  state = {\r\n    username: this.props.user,\r\n    isAuthenticated: this.props.isAuthenticated,\r\n    card: '',\r\n    doctorCard: this.props.doctorCard\r\n  };\r\n  componentDidMount() {\r\n     //console.log(this.props.card);\r\n    // console.log(\"przed requestami\");\r\n    const axios = require('axios');\r\n    \r\n    axios.get('/card/' + this.state.username + '/', { withCredentials: true })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        this.setState({ card: response })\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      if (this.state.isDoctor) {\r\n        axios.get('/doctor-card/' + this.state.card.data._user_id , { withCredentials: true })\r\n          .then(function (response) {\r\n            console.log(response);\r\n            this.props.updateCard({ doctorCard: response })\r\n          })\r\n          .catch(function (error) {\r\n            // handle error\r\n            console.log(error);\r\n          })\r\n      }\r\n      this.props.updateCard({ card: this.state.card});\r\n      //console.log(\"po requestami\");\r\n     // console.log(this.props.card);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        user:\r\n        {console.log(this.state.card)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst ConnectedHome = props => (\r\n  <CardConsumer>\r\n    {({ isAuthenticated, user, doctorCard, isDoctor, updateCard }) => (\r\n      <Home\r\n        {...props}\r\n        isAuthenticated={isAuthenticated}\r\n        user={user}\r\n        doctorCard={doctorCard}\r\n        isDoctor={isDoctor}\r\n        updateCard={updateCard}\r\n      />\r\n    )}\r\n  </CardConsumer>\r\n)\r\n\r\nexport default withCookies(ConnectedHome);","import React, { Component } from \"react\";\r\nimport { Button } from '@material-ui/core';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { CardConsumer } from '../providers/CardProvider'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isAuthenticated: this.props.isAuthenticated,\r\n            username: \"\",\r\n            password: \"\",\r\n            isStatus: false,\r\n            status:''\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    validateForm() {\r\n        return this.state.username.length > 0 && this.state.password.length > 0;\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { cookies } = this.props;\r\n        if (cookies.get(\"SESSION\") != null) {\r\n            let username = localStorage.getItem(\"username\");\r\n            if (username != null) {\r\n                const axios = require('axios');\r\n                axios.get('/user/role/' + username + '/', { withCredentials: true })\r\n                    .then((response) => {\r\n                        // if(response.data.includes(\"ROLE_USER\")){\r\n                        var bool = response.data.includes(\"ROLE_DOCTOR\") ? true : false;\r\n                        this.props.updateCard({\r\n                            isDoctor: bool,\r\n                            isAuthenticated: true,\r\n                            user: username\r\n                        });\r\n                        this.setState({\r\n                            isAuthenticated: true\r\n                        });\r\n                        // }\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        this.setState({isStatus: true});\r\n        event.preventDefault();\r\n        var formData = new FormData();\r\n        formData.append('username', this.state.username);\r\n        formData.append('password', this.state.password);\r\n        const axios = require('axios');\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n\r\n        axios.post('/login', formData, config)\r\n            .then((response) => {\r\n                axios.get('/user/role/' + this.state.username + '/', { withCredentials: true })\r\n                    .then((response) => {\r\n                        var bool = response.data.includes(\"ROLE_DOCTOR\") ? true : false;\r\n                        this.props.updateCard({\r\n                            isDoctor: bool,\r\n                            isAuthenticated: true,\r\n                            user: this.state.username\r\n                        });\r\n                        this.setState({\r\n                            password: '',\r\n                            isAuthenticated: true,\r\n                            isStatus: false\r\n                        });\r\n                        localStorage.setItem(\"username\", this.state.username);\r\n                    })\r\n                    .catch(function (error) {\r\n                        this.setState({\r\n                            status: \"Pobranie roli użytkownika nieudane \" + error,\r\n                            isStatus: false\r\n                        });\r\n                        console.log(error);\r\n                    })\r\n            })\r\n            .catch(function (error) {\r\n                this.setState({\r\n                    status: \"Logowanie nieudane \" + error,\r\n                    isStatus: false\r\n                });\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isAuthenticated) {\r\n            return (<Redirect to={{ pathname: '/home', state: { from: this.props.location } }} />);\r\n        } else {\r\n            return (\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline />\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <Typography align=\"center\" component=\"h1\" variant=\"h5\">\r\n                            Logowanie\r\n                         </Typography>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"username\"\r\n                            label=\"Email \"\r\n                            name=\"email\"\r\n                            autoComplete=\"Adres email\"\r\n                            autoFocus\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Hasło\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"Wpisz hasło\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        {this.state.isStatus ?\r\n                        <Typography variant=\"h4\" component=\"h3\" align=\"center\" margin=\"normal\">\r\n                            <CircularProgress align=\"center\" />\r\n                        </Typography> :\r\n                        <Button\r\n                            disabled={!this.validateForm()}\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                        >Zaloguj</Button>\r\n                        }\r\n                    </form>\r\n                    <Typography variant=\"h4\" component=\"h3\" align=\"center\" margin=\"normal\">\r\n                        {this.state.status}\r\n                    </Typography>\r\n                </Container>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nconst ConnectedLogin = props => (\r\n    <CardConsumer>\r\n        {({ isAuthenticated, updateCard }) => (\r\n            <Login\r\n                {...props}\r\n                isAuthenticated={isAuthenticated}\r\n                updateCard={updateCard}\r\n            />\r\n        )}\r\n    </CardConsumer>\r\n)\r\n\r\n\r\nexport default ConnectedLogin;","import React, { useContext } from 'react';\r\nimport { CardContext } from '../providers/CardProvider';\r\nimport {\r\n    Route,\r\n    Redirect\r\n} from 'react-router-dom'\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n    const { isAuthenticated } = useContext(CardContext);\r\n    return (\r\n   // <CardConsumer>\r\n    //   {({ isAuthenticated }) => (\r\n            <Route {...rest} render={ (props) =>\r\n                isAuthenticated ?\r\n                    <Component {...props} />\r\n                    :\r\n                    <Redirect to='/login'\r\n                     />\r\n            }\r\n            />\r\n    //    )}\r\n  //  </CardConsumer>\r\n    );\r\n}\r\n\r\nexport default ProtectedRoute","import React, { Component } from \"react\";\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default class Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            repassword: '',\r\n            status: '',\r\n            isStatus: false\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        //this.handleChange = this.handleChange.bind(this);\r\n        //this.validateForm = this.validateForm.bind(this);\r\n    }\r\n\r\n    validateForm = () => {\r\n        return this.state.email.length > 0 && this.state.password.length > 0 && this.state.repassword === this.state.password;\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ [event.target.id]: event.target.value });\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            status: \"\",\r\n            isStatus: true\r\n        });\r\n        var formData = new FormData();\r\n        formData.append('email', this.state.email);\r\n        formData.append('password', this.state.password);\r\n        const axios = require('axios');\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n        axios.post('/register', formData, config)\r\n            .then((response) => {\r\n                this.setState({\r\n                    status: \"Pomyślnie dokonano rejestracji\",\r\n                    isStatus: false\r\n                });\r\n            })\r\n            .catch(function (error) {\r\n                this.setState({\r\n                    status: \"Rejestracja nieudana \" + error,\r\n                    isStatus: false\r\n                });\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <Typography align=\"center\" component=\"h1\" variant=\"h5\">\r\n                        Rejestracja\r\n                 </Typography>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email \"\r\n                        name=\"email\"\r\n                        autoComplete=\"Adres email\"\r\n                        autoFocus\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Hasło\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"Wpisz hasło\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"repassword\"\r\n                        label=\"Hasło\"\r\n                        type=\"password\"\r\n                        id=\"repassword\"\r\n                        autoComplete=\"Wpisz hasło ponownie\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    {this.state.isStatus ?\r\n                        <Typography variant=\"h4\" component=\"h3\" align=\"center\" margin=\"normal\">\r\n                            <CircularProgress align=\"center\" />\r\n                        </Typography> :\r\n                        <Button\r\n                            disabled={!this.validateForm()}\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            variant=\"contained\">\r\n                            Zarejestruj\r\n                        </Button>\r\n                    }\r\n                </form>\r\n                <Typography variant=\"h4\" component=\"h3\" align=\"center\" margin=\"normal\">\r\n                        {this.state.status}\r\n                </Typography>\r\n            </Container>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { withCookies } from 'react-cookie';\nimport './styles/App.css';\nimport {\n  BrowserRouter,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport PermanentDrawerLeft from './components/NavBar';\nimport CardDetails from './components/card/CardDetails';\nimport CardUpdate from './components/card/CardUpdate';\nimport DoctorCard from './components/card/DoctorCard';\nimport CardProvider from './components/providers/CardProvider';\nimport Home from './components/Home';\nimport Login from './components/helpers/Login';\nimport ProtectedRoute from './components/helpers/ProtectedRoute';\nimport Grid from '@material-ui/core/Grid';\nimport Logout from './components/helpers/Logout';\nimport Appointment from './components/models/appointment/Appointment';\nimport Register from './components/helpers/Register';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\n\nconst drawerWidth = 240;\n\nconst useStyles = {\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    marginTop: 25\n  }\n};\n\nclass App extends Component {\n  render() {\n    return (\n      //<CookiesProvider>\n      <CardProvider>\n        <BrowserRouter>\n          <PermanentDrawerLeft />\n          <Grid\n            container\n            spacing={2}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={useStyles.appBar}\n          >\n            <Switch>\n              <ProtectedRoute\n                exact\n                path=\"/home\"\n                component={() => <Home />}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/appointments\"\n                component={() => <Appointment />}\n              />\n              <Route\n                exact\n                path=\"/doctor-card\"\n                component={() => <DoctorCard />}\n              />\n              <Route\n                exact\n                path=\"/card\"\n                component={() => <CardDetails />}\n              />\n              <Route\n                exact\n                path=\"/card/update\"\n                component={() => <CardUpdate />}\n              />\n              <Route\n                exact\n                path=\"/logout\"\n                component={() => <Logout />}\n              />\n              <Route\n                exact\n                path=\"/\"\n                render={() =>\n                  <Grid item xs={4}\n                    direction=\"columns\"\n                    justify=\"center\"\n                    alignItems=\"center\">\n                    <Card>\n                      <Typography\n                        variant=\"h5\"\n                        component=\"h2\"\n                        align=\"center\"\n                        paragraph>\n                        Witaj na stronie do zarządzania kartotekami medycznymi, zaloguj się aby uzyskać dostęp do kartoteki lub załóż konto aby utworzyć własną kartę.\n                      </Typography>\n                    </Card>\n                  </Grid>} />\n              <Route\n                exact\n                path=\"/login\"\n                render={() => <Login cookies={this.props.cookies} />}\n              />\n              <Route\n                exact\n                path=\"/register\"\n                component={() => <Register />}\n              />\n            </Switch>\n          </Grid>\n        </BrowserRouter>\n      </CardProvider>\n      // </CookiesProvider>\n    );\n  }\n}\n\nexport default withCookies(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App.jsx';\nimport { CookiesProvider } from 'react-cookie';\n\nReactDOM.render(<CookiesProvider><App /></CookiesProvider>, document.getElementById('root'));"],"sourceRoot":""}